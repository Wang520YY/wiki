一、mysql的表结构B+Tree
首先了解其它的树结构
1、二叉查找树：左子树<根<右子树，时间复杂度log2n
2、平衡二叉树：左右子树高度差不大于1，时间复杂度logn
3、平衡多路查找树B-Tree（B树）
    非叶子节点存放：指针p、数据data、[key,val]
    叶子节点存放：数据data,[key,val]

再看看B+Tree
    非叶子几点存放：键值和指针
    叶子节点存放：键值，data，双向链指针(构成链式环结构)
相较于B-Tree
1、非叶子节点可以存放更多key，降低了高度
2、叶子节点的链指针有利于范围查找和分页查找

二、B+Tree带来的低高度高存储
首先了解下最小存储单元
1、磁盘存储的最小单元是扇区，512字节
2、文件系统的最小单元是块，4k，因此一个文件即使1个字节也不得不占用4KB的空间
而InnerDB最小存储单元是页，16K，也可以设置
非叶子节点(指针6B+bigint主键8B)，这样一个page能存放16384/14=1170
叶子节点如果一行数据算1K，那么高度为3的树能存放：1170*1170*16=21902400，这样基本能满足千万级的数据存储了
